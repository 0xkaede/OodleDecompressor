using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using OodleDecompressor.Utils;

namespace OodleDecompressor
{
    public partial class Form1 : Form
    {
        public byte[] test =
        {
            52,47,71,97,109,101,47,65,116,104,101,110,97,47,72,101,114,111,101,115,47,77,101,115,104,101,115,47,66,111,100,105,101,115,47,67,80,95,48,49,53,95,95,66,111,100,121,0,68,67,104,97,114,97,99,116,101,114,115,47,80,108,97,121,101,114,47,70,101,109,97,108,101,47,77,101,100,105,117,109,47,66,97,115,101,47,83,75,95,77,95,95,95,83,107,101,108,101,116,111,110,0,94,46,85,70,95,77,101,100,95,83,111,108,100,105,101,114,48,49,70,0,102,46,101,95,65,110,105,109,66,80,0,136,46,95,67,0,108,83,107,105,110,115,47,84,86,95,49,57,47,77,97,116,101,114,105,97,108,69,68,95,67,109,109,97,110,100,111,95,84,86,49,57,0,133,46,19,83,99,114,105,112,116,47,67,111,114,101,85,79,98,106,101,99,116,0,20,70,116,110,105,116,101,0,14,65,100,100,105,116,105,111,110,97,108,68,97,116,97,0,9,67,108,97,115,115,0,10,65,114,114,97,121,80,114,111,112,101,114,121,0,18,84,121,112,101,115,80,101,114,109,105,116,116,101,100,0,12,66,111,111,108,22,98,83,117,112,112,111,114,116,67,111,108,111,114,83,119,97,116,99,104,101,115,0,12,66,121,116,101,17,80,97,114,116,0,5,18,27,67,117,115,116,111,109,19,0,30,79,118,101,114,114,105,100,101,36,68,101,102,97,117,108,116,95,95,28,19,69,0,27,58,58,0,17,71,101,110,100,101,114,0,25,58,58,25,15,11,73,110,116,20,77,97,115,116,101,114,97,108,0,21,77,70,108,97,103,73,110,100,101,120,0,17,101,115,0,4,78,111,110,101,0,14,16,0,7,80,97,99,107,97,103,101,0,12,0,18,83,111,102,116,14,83,116,114,117,100,193,201,15,25,54,161,20,203,19,218,25,8,152,44,144,226,36,95,194,239,57,21,169,238,34,169,160,147,67,72,221,138,241,46,57,33,71,8,219,242,240,122,80,113,57,170,9,196,252,71,15,164,103,22,93,200,228,170,198,203,57,127,89,193,172,48,210,142,195,131,253,241,183,82,16,138,79,52,219,10,4,23,134,204,159,211,242,28,108,182,20,10,108,87,135,74,40,16,156,2,11,206,57,241,90,168,227,170,179,61,119,90,253,38,87,55,144,122,214,235,119,222,114,132,137,92,154,156,179,96,12,122,120,240,242,58,34,238,40,198,167,65,200,204,115,172,81,38,131,234,163,75,219,173,43,58,130,110,182,219,107,255,84,74,33,4,213,178,74,57,42,53,186,237,168,168,122,116,153,232,134,3,65,118,198,177,139,9,3,44,125,63,55,159,65,195,137,97,133,129,212,167,144,3,61,234,81,122,100,10,186,188,18,98,230,215,149,25,27,10,27,216,157,250,68,212,107,214,195,148,152,82,107,185,56,16,196,172,65,87,147,245,45,136,156,207,177,102,225,144,197,23,28,89,222,138,248,121,241,208,73,2,51,36,154,219,111,163,115,161,64,234,17,139,54,209,25,160,179,236,10,84,111,22,85,216,195,230,110,189,10,66,121,202,51,193,50,114,88,236,53,190,31,110,113,194,45,53,166,91,15,55,117,47,174,36,146,89,25,204,128,93,18,52,155,135,197,92,106,250,134,30,128,146,185,198,214,131,141,54,233,15,237,86,49,115,235,79,25,252,130,110,6,5,119,228,151,100,17,27,12,84,123,133,12,45,58,236,123,126,162,66,99,16,131,122,115,233,113,11,182,87,55,180,121,24,105,64,86,153,101,207,105,227,34,88,165,109,85,248,112,198
        };

        public byte[] result =
        {
            52, 52 //random numbers just to check something changed in the byte
        };

        private string path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\Output\\Exports\\FortniteGame\\Content\\Characters\\Player\\Female\\Medium\\Bodies\\F_MED_Renegade_Raider_Fire\\test\\test.ucas";


        public Form1()
        {
            InitializeComponent();

            int cLength = test.Length;
            int deLength = Oodle.GetDecompressionBound(cLength);
          
             //test

            result = Oodle.Decompress(test, cLength, deLength);

            if (result == null)
            {
                MessageBox.Show("Result = null!", "ERROR");
            }
            else if (result.Length == 0)
            {
                MessageBox.Show("Result has no length :flushed:", "ERROR");
            }
            else
            {
                Stream stream = File.OpenRead(path);
                stream.Dispose();
                using (BinaryWriter binaryWriter = new BinaryWriter(File.Open(path, FileMode.Open, FileAccess.ReadWrite)))
                {
                    binaryWriter.BaseStream.Seek(0, SeekOrigin.Begin);
                    binaryWriter.Write(result);
                    binaryWriter.Close();
                }
            }
        }
    }
}
